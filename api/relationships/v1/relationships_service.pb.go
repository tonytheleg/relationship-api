// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: relationships/v1/relationships_service.proto

package relationships

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateRelationshipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata       *Metadata       `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	IsPropagatedTo *IsPropogatedTo `protobuf:"bytes,2,opt,name=is_propagated_to,json=isPropagatedTo,proto3" json:"is_propagated_to,omitempty"`
	IsRegisteredTo *RegisteredTo   `protobuf:"bytes,3,opt,name=is_registered_to,json=isRegisteredTo,proto3" json:"is_registered_to,omitempty"`
}

func (x *CreateRelationshipRequest) Reset() {
	*x = CreateRelationshipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relationships_v1_relationships_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRelationshipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRelationshipRequest) ProtoMessage() {}

func (x *CreateRelationshipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_relationships_v1_relationships_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRelationshipRequest.ProtoReflect.Descriptor instead.
func (*CreateRelationshipRequest) Descriptor() ([]byte, []int) {
	return file_relationships_v1_relationships_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRelationshipRequest) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CreateRelationshipRequest) GetIsPropagatedTo() *IsPropogatedTo {
	if x != nil {
		return x.IsPropagatedTo
	}
	return nil
}

func (x *CreateRelationshipRequest) GetIsRegisteredTo() *RegisteredTo {
	if x != nil {
		return x.IsRegisteredTo
	}
	return nil
}

type CreateRelationshipResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateRelationshipResponse) Reset() {
	*x = CreateRelationshipResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relationships_v1_relationships_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRelationshipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRelationshipResponse) ProtoMessage() {}

func (x *CreateRelationshipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_relationships_v1_relationships_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRelationshipResponse.ProtoReflect.Descriptor instead.
func (*CreateRelationshipResponse) Descriptor() ([]byte, []int) {
	return file_relationships_v1_relationships_service_proto_rawDescGZIP(), []int{1}
}

type UpdateRelationshipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata       *Metadata       `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	IsPropagatedTo *IsPropogatedTo `protobuf:"bytes,2,opt,name=is_propagated_to,json=isPropagatedTo,proto3" json:"is_propagated_to,omitempty"`
	IsRegisteredTo *RegisteredTo   `protobuf:"bytes,3,opt,name=is_registered_to,json=isRegisteredTo,proto3" json:"is_registered_to,omitempty"`
}

func (x *UpdateRelationshipRequest) Reset() {
	*x = UpdateRelationshipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relationships_v1_relationships_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRelationshipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRelationshipRequest) ProtoMessage() {}

func (x *UpdateRelationshipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_relationships_v1_relationships_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRelationshipRequest.ProtoReflect.Descriptor instead.
func (*UpdateRelationshipRequest) Descriptor() ([]byte, []int) {
	return file_relationships_v1_relationships_service_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateRelationshipRequest) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UpdateRelationshipRequest) GetIsPropagatedTo() *IsPropogatedTo {
	if x != nil {
		return x.IsPropagatedTo
	}
	return nil
}

func (x *UpdateRelationshipRequest) GetIsRegisteredTo() *RegisteredTo {
	if x != nil {
		return x.IsRegisteredTo
	}
	return nil
}

type UpdateRelationshipResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateRelationshipResponse) Reset() {
	*x = UpdateRelationshipResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relationships_v1_relationships_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRelationshipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRelationshipResponse) ProtoMessage() {}

func (x *UpdateRelationshipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_relationships_v1_relationships_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRelationshipResponse.ProtoReflect.Descriptor instead.
func (*UpdateRelationshipResponse) Descriptor() ([]byte, []int) {
	return file_relationships_v1_relationships_service_proto_rawDescGZIP(), []int{3}
}

type DeleteRelationshipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata       *Metadata       `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	IsPropagatedTo *IsPropogatedTo `protobuf:"bytes,2,opt,name=is_propagated_to,json=isPropagatedTo,proto3" json:"is_propagated_to,omitempty"`
	IsRegisteredTo *RegisteredTo   `protobuf:"bytes,3,opt,name=is_registered_to,json=isRegisteredTo,proto3" json:"is_registered_to,omitempty"`
}

func (x *DeleteRelationshipRequest) Reset() {
	*x = DeleteRelationshipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relationships_v1_relationships_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRelationshipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRelationshipRequest) ProtoMessage() {}

func (x *DeleteRelationshipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_relationships_v1_relationships_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRelationshipRequest.ProtoReflect.Descriptor instead.
func (*DeleteRelationshipRequest) Descriptor() ([]byte, []int) {
	return file_relationships_v1_relationships_service_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteRelationshipRequest) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *DeleteRelationshipRequest) GetIsPropagatedTo() *IsPropogatedTo {
	if x != nil {
		return x.IsPropagatedTo
	}
	return nil
}

func (x *DeleteRelationshipRequest) GetIsRegisteredTo() *RegisteredTo {
	if x != nil {
		return x.IsRegisteredTo
	}
	return nil
}

type DeleteRelationshipResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteRelationshipResponse) Reset() {
	*x = DeleteRelationshipResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relationships_v1_relationships_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRelationshipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRelationshipResponse) ProtoMessage() {}

func (x *DeleteRelationshipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_relationships_v1_relationships_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRelationshipResponse.ProtoReflect.Descriptor instead.
func (*DeleteRelationshipResponse) Descriptor() ([]byte, []int) {
	return file_relationships_v1_relationships_service_proto_rawDescGZIP(), []int{5}
}

var File_relationships_v1_relationships_service_proto protoreflect.FileDescriptor

var file_relationships_v1_relationships_service_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73, 0x2e, 0x76, 0x31,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe9, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x68, 0x69, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4a, 0x0a, 0x10, 0x69,
	0x73, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x68, 0x69, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x67, 0x61, 0x74, 0x65, 0x64, 0x54, 0x6f, 0x52, 0x0e, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x61,
	0x67, 0x61, 0x74, 0x65, 0x64, 0x54, 0x6f, 0x12, 0x48, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x54,
	0x6f, 0x52, 0x0e, 0x69, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x54,
	0x6f, 0x22, 0x1c, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xe9, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4a, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x70,
	0x61, 0x67, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x67, 0x61, 0x74, 0x65, 0x64, 0x54,
	0x6f, 0x52, 0x0e, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x65, 0x64, 0x54,
	0x6f, 0x12, 0x48, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x65, 0x64, 0x5f, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x54, 0x6f, 0x52, 0x0e, 0x69, 0x73, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x54, 0x6f, 0x22, 0x1c, 0x0a, 0x1a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xe9, 0x01, 0x0a, 0x19, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x4a, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x67, 0x61, 0x74, 0x65, 0x64, 0x54, 0x6f, 0x52, 0x0e, 0x69, 0x73, 0x50,
	0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x65, 0x64, 0x54, 0x6f, 0x12, 0x48, 0x0a, 0x10, 0x69,
	0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x68, 0x69, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x65, 0x64, 0x54, 0x6f, 0x52, 0x0e, 0x69, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x65, 0x64, 0x54, 0x6f, 0x22, 0x1c, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x32, 0xd7, 0x03, 0x0a, 0x19, 0x4b, 0x65, 0x73, 0x73, 0x65, 0x6c, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x91, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x12, 0x2b, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x68, 0x69, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x68, 0x69, 0x70, 0x73, 0x12, 0x91, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x12, 0x2b, 0x2e, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68,
	0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a,
	0x01, 0x2a, 0x1a, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73, 0x12, 0x91, 0x01, 0x0a, 0x12, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70,
	0x12, 0x2b, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x68, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x2a, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73, 0x42, 0x5d, 0x0a,
	0x11, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69,
	0x70, 0x73, 0x50, 0x01, 0x5a, 0x46, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x74, 0x6f, 0x6e, 0x79, 0x74, 0x68, 0x65, 0x6c, 0x65, 0x67, 0x2f, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73, 0x3b, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_relationships_v1_relationships_service_proto_rawDescOnce sync.Once
	file_relationships_v1_relationships_service_proto_rawDescData = file_relationships_v1_relationships_service_proto_rawDesc
)

func file_relationships_v1_relationships_service_proto_rawDescGZIP() []byte {
	file_relationships_v1_relationships_service_proto_rawDescOnce.Do(func() {
		file_relationships_v1_relationships_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_relationships_v1_relationships_service_proto_rawDescData)
	})
	return file_relationships_v1_relationships_service_proto_rawDescData
}

var file_relationships_v1_relationships_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_relationships_v1_relationships_service_proto_goTypes = []any{
	(*CreateRelationshipRequest)(nil),  // 0: relationships.v1.CreateRelationshipRequest
	(*CreateRelationshipResponse)(nil), // 1: relationships.v1.CreateRelationshipResponse
	(*UpdateRelationshipRequest)(nil),  // 2: relationships.v1.UpdateRelationshipRequest
	(*UpdateRelationshipResponse)(nil), // 3: relationships.v1.UpdateRelationshipResponse
	(*DeleteRelationshipRequest)(nil),  // 4: relationships.v1.DeleteRelationshipRequest
	(*DeleteRelationshipResponse)(nil), // 5: relationships.v1.DeleteRelationshipResponse
	(*Metadata)(nil),                   // 6: relationships.v1.Metadata
	(*IsPropogatedTo)(nil),             // 7: relationships.v1.IsPropogatedTo
	(*RegisteredTo)(nil),               // 8: relationships.v1.RegisteredTo
}
var file_relationships_v1_relationships_service_proto_depIdxs = []int32{
	6,  // 0: relationships.v1.CreateRelationshipRequest.metadata:type_name -> relationships.v1.Metadata
	7,  // 1: relationships.v1.CreateRelationshipRequest.is_propagated_to:type_name -> relationships.v1.IsPropogatedTo
	8,  // 2: relationships.v1.CreateRelationshipRequest.is_registered_to:type_name -> relationships.v1.RegisteredTo
	6,  // 3: relationships.v1.UpdateRelationshipRequest.metadata:type_name -> relationships.v1.Metadata
	7,  // 4: relationships.v1.UpdateRelationshipRequest.is_propagated_to:type_name -> relationships.v1.IsPropogatedTo
	8,  // 5: relationships.v1.UpdateRelationshipRequest.is_registered_to:type_name -> relationships.v1.RegisteredTo
	6,  // 6: relationships.v1.DeleteRelationshipRequest.metadata:type_name -> relationships.v1.Metadata
	7,  // 7: relationships.v1.DeleteRelationshipRequest.is_propagated_to:type_name -> relationships.v1.IsPropogatedTo
	8,  // 8: relationships.v1.DeleteRelationshipRequest.is_registered_to:type_name -> relationships.v1.RegisteredTo
	0,  // 9: relationships.v1.KesselRelationshipservice.CreateRelationship:input_type -> relationships.v1.CreateRelationshipRequest
	2,  // 10: relationships.v1.KesselRelationshipservice.UpdateRelationship:input_type -> relationships.v1.UpdateRelationshipRequest
	4,  // 11: relationships.v1.KesselRelationshipservice.DeleteRelationship:input_type -> relationships.v1.DeleteRelationshipRequest
	1,  // 12: relationships.v1.KesselRelationshipservice.CreateRelationship:output_type -> relationships.v1.CreateRelationshipResponse
	3,  // 13: relationships.v1.KesselRelationshipservice.UpdateRelationship:output_type -> relationships.v1.UpdateRelationshipResponse
	5,  // 14: relationships.v1.KesselRelationshipservice.DeleteRelationship:output_type -> relationships.v1.DeleteRelationshipResponse
	12, // [12:15] is the sub-list for method output_type
	9,  // [9:12] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_relationships_v1_relationships_service_proto_init() }
func file_relationships_v1_relationships_service_proto_init() {
	if File_relationships_v1_relationships_service_proto != nil {
		return
	}
	file_relationships_v1_common_proto_init()
	file_relationships_v1_relationship_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_relationships_v1_relationships_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CreateRelationshipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relationships_v1_relationships_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateRelationshipResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relationships_v1_relationships_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateRelationshipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relationships_v1_relationships_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateRelationshipResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relationships_v1_relationships_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteRelationshipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relationships_v1_relationships_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteRelationshipResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_relationships_v1_relationships_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_relationships_v1_relationships_service_proto_goTypes,
		DependencyIndexes: file_relationships_v1_relationships_service_proto_depIdxs,
		MessageInfos:      file_relationships_v1_relationships_service_proto_msgTypes,
	}.Build()
	File_relationships_v1_relationships_service_proto = out.File
	file_relationships_v1_relationships_service_proto_rawDesc = nil
	file_relationships_v1_relationships_service_proto_goTypes = nil
	file_relationships_v1_relationships_service_proto_depIdxs = nil
}
